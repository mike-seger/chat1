server:
    context-path: ''
    port: 18090
spring:
    autoconfigure:
        exclude: ''
    datasource:
        password: ''
        username: sa
        url: jdbc:h2:~/h2/chat1;MODE=MySQL;DB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE
    h2:
        console:
            enabled: true
            path: /develop/h2_console
    jpa:
        hibernate:
            ddl-auto: update
        properties:
            hibernate:
                format_sql: true
        show-sql: false
    output:
        ansi:
            enabled : always
hibernate:
    dialect: org.hibernate.dialect.H2Dialect
#            springframework:
#                cloud:
#                    netflix:
#                        zuul: trace
#                web:
#                    filter:
#                        CommonsRequestLoggingFilter: trace

open:
    endpoint:
        uris: /hrrs, /hrrs/**
swagger:
    uris: /v2/api-docs,/configuration/**,/swagger.yml,/swagger-ui.html,/swagger-ui.html#**,/webjars/**,/swagger-resources/**
tcptunnel:
    bufferSize: 16777216
    enabled: true
    maxDumpSize: 8192
    tunnels:
    -   port: 18092
        remoteHost: localhost
        remotePort: 18090
    -   port: 18093
        remoteHost: www.switch.ch
        remotePort: 80
charon:
    mappings:
    -   destinations: http://localhost:18092/
        name: charon sample 0
        path: /charon0/
    -   destinations: http://localhost:18092/
        name: charon sample 1
        path: /charon1/
    tracing:
        enabled: false
proxy:
    solr:
        logging-enabled: false
        proxy-path: ${server.context-path}/solr/*
        target-url: http://localhost:${server.port}/
zuul:
    debug:
        request: true
    forceOriginalQueryStringEncoding: true
    include-debug-header: true
    routes:
        zuul1:
            path: /zuul1/**
            sensitiveHeaders: ''
            url: http://localhost:18092
        zuul2:
            path: /zuul2/**
            sensitiveHeaders: ''
            url: http://localhost:18092
littleproxy:
    enabled: false
    request:
        buffer-size: 10000000
    response:
        buffer-size: 10000000
    server:
        port: '#{ ${server.port} + 1 }'
chat1:
    userconfig:
        users:
        -   name: user1
            password: password1
            role: USER
        -   name: user2
            password: password2
            role: USER
        -   name: admin
            password: admin
            role: ADMIN,ACTUATOR